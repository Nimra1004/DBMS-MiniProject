<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="pictureBox1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>